

call plug#begin('~/.vim/plugged')
Plug 'Valloric/YouCompleteMe'
Plug 'Yggdroot/indentLine'
" Plug 'ycm-core/YouCompleteMe', { 'do': './install.py' }
Plug 'mattn/emmet-vim'
Plug 'wikitopian/hardmode'
Plug 'digitaltoad/vim-pug'
Plug 'moll/vim-node'


Plug 'mileszs/ack.vim'
Plug 'scrooloose/nerdtree'
Plug 'dense-analysis/ale'
Plug 'tpope/vim-commentary'
Plug 'terryma/vim-multiple-cursors'
Plug 'altercation/vim-colors-solarized'
Plug 'vim-scripts/peaksea'
Plug 'rafi/awesome-vim-colorschemes'
Plug 'prettier/vim-prettier', { 'do': 'npm install' }
Plug 'tpope/vim-surround'
Plug 'jesseleite/vim-noh'
Plug 'junegunn/goyo.vim'
Plug 'mileszs/ack.vim'
Plug 'ervandew/supertab'

call plug#end()

syntax enable
set nocompatible
syntax on
" filetype plugin indent on
filetype plugin on
set encoding=UTF-8
set cursorline
set ruler
set smartindent
set mouse=c



let g:ycm_use_clangd = 0
let g:ycm_autoclose_preview_window_after_insertion = 1
let g:ycm_autoclose_preview_window_after_completion = 1
    
    set foldmethod=indent
    set syntax=javaScript
    set foldlevelstart=1
    let javaScript_fold=1         " JavaScript
    let php_folding=1             " PHP
    let sh_fold_enabled=1         " sh
    let vimsyn_folding='af'       " Vim script
    let xml_syntax_folding=1      " XML
    set foldnestmax=2

    imap jj <ESC>
	imap <Capslock> <c>
    set tabstop=4
    set relativenumber
    set number
    set showmatch
    set showcmd
	set cursorline
    set noswapfile
    set shell
    set ft=jade

    syntax on
    let g:indentLine_color_term = 239
    let g:indentLine_char_list = ['|', '|', '?', '?']
    let g:indentLine_concealcursor = 'inc'
    let g:indentLine_conceallevel = 2
    let g:indentLine_enabled = 0
    "" for eslint (ALE)
    let b:ale_fixers = ['prettier', 'eslint']
    let g:ale_fix_on_save = 1
    let g:ale_completion_enabled = 1
    "" for js
    let g:javascript_plugin_jsdoc = 1
    let g:javascript_plugin_ngdoc = 1
    let g:javascript_plugin_flow = 1
    "" for html
    " iabbrev </ </<C-X><C-O>
	"" emmet config
    autocmd FileType html,css EmmetInstall
    let g:user_emmet_install_global = 0
    let g:user_emmet_leader_key=','

	"" Nerd trree
	nnoremap <C-e> :NERDTreeToggle<CR>
	autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
	let g:NERDTreeDirArrowExpandable = '▸'
	let g:NERDTreeDirArrowCollapsible = '▾'
    let g:NERDTreeWinPos = "right"
    let g:NERDTreeQuitOnOpen = 1

    ""Indent line
    let g:indentLine_char_list = ['|', '¦', '┆', '┊']
    let g:indentLine_enabled = 1

	""ALE
	let g:ale_fixers = {
	\   '*': ['remove_trailing_lines', 'trim_whitespace'],
	\   'javascript': ['eslint'],
	\}
	set omnifunc=ale#completion#OmniFunc

	""Multicursor vim
	let g:multi_cursor_use_default_mapping=0
	" Default mapping
	let g:multi_cursor_start_word_key      = '<C-n>'
	let g:multi_cursor_select_all_word_key = '<C-a>'
	let g:multi_cursor_start_key           = 'g<C-n>'
	let g:multi_cursor_select_all_key      = 'g<A-n>'
	let g:multi_cursor_next_key            = '<C-n>'
	let g:multi_cursor_prev_key            = '<C-p>'
	let g:multi_cursor_skip_key            = '<C-x>'
	let g:multi_cursor_quit_key            = '<Esc>'

    "" Prettier
	" set moving between windows to ctrl+hjkl
	"
	noremap <silent> <C-l> <c-w>l
	noremap <silent> <C-h> <c-w>h
	noremap <silent> <C-k> <c-w>k
	noremap <silent> <C-j> <c-w>j    

	""ColorScheme
	 set background=dark
	 " colorscheme jellybeans
	 " colorscheme hybrid
	 colorscheme dracula

	 ""Additional settings
	
	 " Sets how many lines of history VIM has to remember
	 set history=900
	 " like <leader>w saves the current file
	 let mapleader = ","
	"Always show current position
	" Highlight search results
	set hlsearch
	" " Makes search act like search in modern browsers
	" set incsearch 
	" " Don't redraw while executing macros (good performance config)
	set lazyredraw 
	" " For regular expressions turn magic on
	" set magic
	" Show matching brackets when text indicator is over them
	set showmatch 
	" How many tenths of a second to blink when matching brackets
	set mat=2
	" Use spaces instead of tabs
	set expandtab
	" " Be smart when using tabs ;)
	" set smarttab
	" " 1 tab == 4 spaces
	set shiftwidth=4
	set softtabstop=2

	""quitting and writing vim
	 :command WQ wq
	 :command Wq wq
	 :command W w
	 :command Q q

	 ""Ryan florence vim config

	 " so I can go up an down wrapped lines
	 map j gj
	 map k gk
	  
	" Don't wrap lines
	set nowrap

	" Run prettier asynchronously before saving
	"
	let g:prettier#autoformat=0
	"
	autocmd BufWritePre *.js,*.jsx,*.mjs,*.ts,*.tsx,*.css,*.less,*.scss,*.json,*.graphql,*.md PrettierAsync

	" Allow JSX in .js files
	let g:jsx_ext_required=0

	" Highlight search matches
	set hlsearch

	" Mappings for moving lines and preserving indentation
	" " http://vim.wikia.com/wiki/Moving_lines_up_or_down
	nnoremap <C-j> :m .+1<CR>==
	nnoremap <C-k> :m .-2<CR>==
	vnoremap <C-j> :m '>+1<CR>gv=gv
	vnoremap <C-k> :m '<-2<CR>gv=gv

	" clear search with shift+enter
	nnoremap <S-CR> :noh<CR>

	"Prettierjkkkkkkkkk
	nnoremap = :Prettier<CR>
